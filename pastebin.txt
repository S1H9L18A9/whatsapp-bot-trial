#!/usr/bin/env python3
import fcntl
import time
import random
import os
from datetime import datetime

def safe_write_to_file(filename, content, max_retries=10):
    """Safely write to file with file locking and retries"""
    for attempt in range(max_retries):
        try:
            with open(filename, 'a') as f:
                # Try to get exclusive lock (non-blocking)
                fcntl.flock(f.fileno(), fcntl.LOCK_EX | fcntl.LOCK_NB)
                f.write(content + '\n')
                f.flush()  # Force write to disk
                print(f"[SCRIPT A] Successfully wrote: {content.strip()}")
                return True
                
        except (IOError, OSError) as e:
            print(f"[SCRIPT A] Attempt {attempt + 1}: File locked, retrying in {0.1 + attempt * 0.05}s")
            time.sleep(0.1 + attempt * 0.05)  # Exponential backoff
            continue
    
    print(f"[SCRIPT A] FAILED to write after {max_retries} attempts: {content.strip()}")
    return False

def main():
    filename = "shared_log.txt"
    script_name = "SCRIPT_B"
    
    print(f"[{script_name}] Starting - will write 20 lines with random delays")
    
    for i in range(20):
        timestamp = datetime.now().strftime("%H:%M:%S.%f")[:-3]
        message = f"[{timestamp}] {script_name} - Line {i+1:02d} - PID:{os.getpid()}"
        
        # Random delay between writes (0.1 to 2 seconds)
        delay = random.uniform(0.1, 2.0)
        print(f"[{script_name}] Waiting {delay:.2f}s before writing line {i+1}")
        time.sleep(delay)
        
        # Try to write to shared file
        safe_write_to_file(filename, message)
    
    print(f"[{script_name}] Finished writing all lines")

if __name__ == "__main__":
    main()
